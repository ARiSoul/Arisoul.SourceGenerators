<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<Nullable>enable</Nullable>
		<LangVersion>latest</LangVersion>
		<!-- 👇 We don't want to reference the source generator dll directly in consuming projects -->
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<ImplicitUsings>true</ImplicitUsings>
		<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
		<Title>Arisoul Source Generators</Title>
		<Authors>Arisoul</Authors>
		<Company>Arisoul</Company>
		<Description>This is a simple source generator for .Net C#, created with personal purposes, but it may grow as needed. For now, the only available generators are for DTO generation, and extensions that facilitate mappings. 
In this first version, only single entities are considered in mapping extensions. The marker attribute to trigger the generation is called 'DtoPropertyAttribute' and it's provided in the package in the Arisoul.SourceGenerators.Attributes dll. Any suggestions or ideas are welcome in the GitHub repo.</Description>
		<PackageProjectUrl></PackageProjectUrl>
		<PackageIcon>Arisoul_Triangle_Fill_128x128.png</PackageIcon>
		<RepositoryUrl>https://github.com/ARiSoul/Arisoul.SourceGenerators</RepositoryUrl>
		<PackageTags>source;generators;c#;dotnet;dto;data transfer object;generation;code</PackageTags>
		<PackageOutputPath>$(OutputPath)</PackageOutputPath>
		<IncludeSymbols>False</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<PackageVersion>1.0.4</PackageVersion>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
	</PropertyGroup>

	<!--<PropertyGroup>
		--><!-- Persist the source generator (and other) files to disk --><!--
		<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
		--><!-- 👇 The "base" path for the source generators --><!--
		<GeneratedFolder>Generated</GeneratedFolder>
		--><!-- 👇 Write the output for each target framework to a different sub-folder --><!--
		<CompilerGeneratedFilesOutputPath>$(GeneratedFolder)\$(TargetFramework)</CompilerGeneratedFilesOutputPath>
	</PropertyGroup>

	<ItemGroup>
		--><!-- 👇 Exclude everything in the base folder --><!--
		<Compile Remove="$(GeneratedFolder)/**/*.cs" />
	</ItemGroup>-->

	<!-- Standard source generator references -->
	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.5.0" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" />
	</ItemGroup>

	<!-- Reference the attributes from the generator to compile against them -->
	<!-- Ensure we specify PrivateAssets so the NuGet doesn't have any dependencies -->
	<ItemGroup>
		<ProjectReference Include="..\Arisoul.SourceGenerators.Attributes\Arisoul.SourceGenerators.Attributes.csproj" PrivateAssets="All" />
	</ItemGroup>

	<ItemGroup>
		<!-- Pack the generator dll in the analyzers/dotnet/cs path -->
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />

		<!-- Pack the attributes dll in the analyzers/dotnet/cs path -->
		<None Include="$(OutputPath)\Arisoul.SourceGenerators.Attributes.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />

		<!-- Pack the attributes dll in the lib\netstandard2.0 path -->
		<None Include="$(OutputPath)\Arisoul.SourceGenerators.Attributes.dll" Pack="true" PackagePath="lib\netstandard2.0" Visible="true" />
		<None Include="E:\Dropbox\Knowledge Base\IMAGENS &amp; ICONS\Arisoul_Triangle_Fill_128x128.png">
		  <Pack>True</Pack>
		  <PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

</Project>
